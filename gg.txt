```-- Create a trigger to enforce 10-digit mobile numbers
CREATE TRIGGER prevent_wrong_mobile_number
BEFORE INSERT ON your_table_name
FOR EACH ROW
BEGIN
    IF LENGTH(NEW.mobile) <> 10 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Mobile number must be exactly 10 digits';
    END IF;
END;```

```-- Calculate total marks and assign grades based on the total
SELECT CONCAT(Fname, ' ', Lname) AS StudentName,
       Maths + Science + History AS TotalMarks,
       CASE
           WHEN Maths + Science + History > 200 THEN 'A'
           WHEN Maths + Science + History >= 176 AND Maths + Science + History <= 200 THEN 'B'
           WHEN Maths + Science + History >= 145 AND Maths + Science + History <= 175 THEN 'C'
           WHEN Maths + Science + History > 140 THEN 'D'
           ELSE 'Fail'
       END AS Grade
FROM students;```

```-- Display result of Maths and concatenate name
SELECT CONCAT(Fname, ' ', Lname) AS StudentName,
       IF(Maths >= 50, 'Pass in Maths', 'Fail in Maths') AS MathsResult
FROM students;```

```-- Create function to calculate tax based on salary
DELIMITER //

CREATE FUNCTION CalculateTax(salary DECIMAL(10, 2)) RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE tax DECIMAL(10, 2);

    IF salary <= 10000 THEN
        SET tax = salary * 0.1;
    ELSEIF salary > 10000 AND salary <= 50000 THEN
        SET tax = 10000 * 0.1 + (salary - 10000) * 0.2;
    ELSE
        SET tax = 10000 * 0.1 + 40000 * 0.2 + (salary - 50000) * 0.3;
    END IF;

    RETURN tax;
END //

DELIMITER ;```

-- Example usage of the tax calculation function
SELECT CONCAT(Fname, ' ', Lname) AS StudentName,
       Salary,
       CalculateTax(Salary) AS TaxAmount
FROM students;

Find the names of sailors who have reserved boat number 103. select sid,sname from sailors where sid in(select sid from reserves where bid=103);
select s.sid,s.sname ,r.bid from sailors s, reserves r where s.sid=r.sid and r.bid=103;
2) Find the sids of sailors who have reserves a red boat. select sid,sname from sailors where sid in (select sid from reserves where bid in (select bid from boat where colour='red'));
3) Find the names of sailors who have reserved a red or a green boat. select s.sid ,s.sname,b.colour from sailors s, reserves r,boat b where s.sid=r.sid and r.bid =b.bid and b.colour='red'
union (select s.sid,s.sname,b.colour from sailors s,reserves r,boat b where s.sid=r.sid and r.bid=b.bid and b.colour='green');
Find the names of sailors who have reserved both a red and a green boat. select s.sid,s.sname from sailors s, reserves r, boat b where s.sid=r.sid and r.bid=b.bid and b.colour='green' and s.sid in (select s.sid from sailors s, reserves r, boat b where s.sid=r.sid and r.bid=b.bid and b.colour='red') ;
4) Find the sids of all sailors who have reserved red boats but not green boats. select s.sid ,s.sname,b.colour from sailors s, reserves r,boat b where s.sid=r.sid and r.bid =b.bid and b.colour='red' and s.sid not in (select s.sid from sailors s,reserves r,boat b where s.sid=r.sid and r.bid=b.bid and b.colour='green');

Find all sids of sailors who have a rating of 10 or reserved boat 104. select s.sid from sailors s where s.rating=10 union (select r.sid from reserves r where r.bid=104);
6) Find sailors whose rating is better than some sailor called Horatio. select sid,sname,rating from sailors where rating > any (select rating from sailors where sname='horatio');
7) Find sailors whose rating is better than every sailor called Horatio. select sid,sname,rating from sailors where rating > all (select rating from sailors where sname='horatio');
8) Find the names of sailors who have reserved all boats.
select s.sname from sailors s where not exists ( select b.bid from boat b where not exists ( select r. bid fom reserves r where r.bid = b.bid and r.sid = s.sid ))
9) Find the names of sailors who are older than the oldest sailor with a rating of 10. select sid,sname from sailors where age>(select max(age) from sailors where rating=10); or select sid,sname from sailors where age> all(select max(age) from sailors where rating=10);
10) for each red boat, find the number of reservations for this boat. select bid, count(*) from reserves where bid in(select bid from boat where colour='red') group by bid; OR select b.bid,count(*) as reservation_count from boat b,reserves r where r.bid=b.bid and b.colour='red' group by b.bid;


